{"version":3,"sources":["constants/post.constants.js","reducers/post.reducer.js","constants/user.constants.js","reducers/user.reducer.js","reducers/index.js","constants/variable.constants.js","store/store.js","helpers/history.helpers.js","components/Header/UserHeader.js","services/services.js","services/api/post.js","actions/post.action.js","services/api/user.js","actions/user.action.js","components/posts_view/posts_view.js","views/HomePage.views.js","views/LoginPage.views.js","views/RegisterPage.views.js","router.js","components/posts_view/posts_create.js","views/PostCreate.view.js","components/Route/PrivateRoute.js","layouts/Main.layout.js","App.js","index.js"],"names":["postConstants","GET_POSTS","GET_POST","CREATE_POST","CREATE_POST_PENDING","CLEAR_DATA","userConstants","GET_USERS","GET_USER","CLEAR_ALL_DATA","LOGIN_REQUEST","LOGIN_FAILURE","LOGIN_SUCCESS","CLEAR_ERROR_DATA","REGISTER_USER_REQUEST","REGISTER_USER_FAILURE","REGISTER_USER_SUCCESS","REGISTER_CLEAR_ERROR_DATA","combineReducers","postReducer","state","loading","posts","create_post","status","action","type","data","userReducer","users","user","error","register","register_status","variableConstants","loggerMiddleware","createLogger","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunkMiddleware","history","createBrowserHistory","SubMenu","Menu","UserHeader","props","e","key","push","localStorage","removeItem","window","location","href","JSON","parse","getItem","name","theme","style","lineHeight","textAlign","mode","onTitleClick","this","handleToLogin","title","className","showName","Item","onClick","handleToCreatePost","bind","handleLogout","handleClick","React","Component","service","axios","create","baseURL","timeout","interceptors","request","use","config","headers","Promise","reject","response","message","getPostsAPI","getPosts","page","post","getPost","id","createPost","summary","content","tag","getPostsAction","getInfoPosts","dispatch","then","respond","resetInfo","res","post_created","catch","getUserAPI","getUsers","login","email","password","userAction","values","success","a","setItem","token","stringify","clear_error","value","clear_error_register","Panel","Collapse","Main","find","_id","match","params","loadPosts","document","marginTop","loadding","gutter","span","bordered","length","map","index","moment","createAt","format","load_author_name","owner","color","accordion","header","defaultCurrent","current","total","pageSize","onChange","onChangePage","withRouter","connect","Home","exact","path","component","PostsView","from","to","FormLogin","handleSubmit","setState","login_button_disabled","preventDefault","form","validateFields","err","resetFields","handleLogin","description","notification","open","duration","openNotification","fieldsError","getFieldDecorator","getFieldsError","getFieldError","isFieldTouched","emailError","passwordError","justify","align","marginBottom","onSubmit","validateStatus","help","rules","required","prefix","placeholder","min","disabled","htmlType","Object","keys","some","field","LoginForm","Form","FormRegister","handleRegister","handleConfirmBlur","target","confirmDirty","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","force","conf_passwordError","nameError","validator","Password","onBlur","RegisterForm","mainRouter","layout","HomePage","invisible","TextArea","Input","PostCreateForm","modules","toolbar","formats","handleCreatePost","handleClose","removedTag","tags","filter","check","showInput","inputVisible","input","focus","handleInputChange","inputValue","handleInputConfirm","indexOf","saveInputRef","submit_disabled","Array","isArray","titleError","summaryError","rows","label","handleChangeQuill","isLongTag","tagElem","closable","onClose","slice","ref","size","width","onPressEnter","background","borderStyle","FormPostCreate","PostCreate","PrivateRoute","rest","render","pathname","Header","Layout","Footer","Content","switchRoutes","routes","prop","App","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.chunk.js","sourcesContent":["export const postConstants = {\r\n    GET_POSTS: 'GET_POSTS',\r\n    GET_POST: 'GET_POST',\r\n    CREATE_POST: 'CREATE_POST',\r\n    CREATE_POST_PENDING: 'CREATE_POST_PENDING',\r\n    CLEAR_DATA: 'CLEAR_DATA',\r\n};","import {postConstants} from '../constants/post.constants'\r\n\r\n\r\nexport default (state = {loading: true, posts: {}, create_post: {loading: false, status: null}}, action) => {\r\n    switch(action.type)\r\n    {\r\n        case postConstants.GET_POSTS: return {...state, \r\n            loading: false,\r\n            posts: action.data\r\n        }; break;\r\n        case postConstants.CREATE_POST: return {...state, \r\n            create_post: {loading: false, status: action.status}\r\n        }; break;\r\n        case postConstants.CREATE_POST_PENDING: return {...state, \r\n            create_post: {loading: true, status: null}\r\n        }; break;\r\n        case postConstants.CLEAR_DATA: return {...state, \r\n            loading: true,\r\n            posts: {}\r\n        }; break;\r\n        \r\n        default: return state;\r\n    }\r\n};\r\n\r\n","export const userConstants = {\r\n    GET_USERS: 'GET_USERS',\r\n    GET_USER: 'GET_USER',\r\n\r\n    CLEAR_ALL_DATA: 'CLEAR_ALL_DATA',\r\n    \r\n    LOGIN_REQUEST: 'LOGIN_REQUEST',\r\n    LOGIN_FAILURE: 'LOGIN_FAILURE',\r\n    LOGIN_SUCCESS: 'LOGIN_SUCCESS',\r\n    CLEAR_ERROR_DATA: 'CLEAR_ERROR_DATA',\r\n\r\n    REGISTER_USER_REQUEST: 'REGISTER_USER_REQUEST',\r\n    REGISTER_USER_FAILURE: 'REGISTER_USER_FAILURE',\r\n    REGISTER_USER_SUCCESS: 'REGISTER_USER_SUCCESS',\r\n    REGISTER_CLEAR_ERROR_DATA: 'REGISTER_CLEAR_ERROR_DATA',\r\n};","import {userConstants} from '../constants/user.constants'\r\n\r\n\r\nexport default (state = {users: {loading: true, data: {}}, user: {loading: true, data: {}, error: ''}, register: {loading: true, register_status: false, error: ''}}, action) => {\r\n    switch(action.type)\r\n    {\r\n        case userConstants.GET_USERS: return {...state, \r\n            users: {\r\n                loading: false, \r\n                data: action.data\r\n            }\r\n        }; break;\r\n        case userConstants.LOGIN_REQUEST: return {...state, \r\n            user: {loading: true, data: {}, error: ''}\r\n        }; break;\r\n        case userConstants.LOGIN_FAILURE: return {...state, \r\n             \r\n            user: {loading: false, error: action.error, data: {}}\r\n        }; break;\r\n        case userConstants.LOGIN_SUCCESS: return {...state, \r\n            user: {loading: false, data: action.user, error: ''}\r\n        }; break;\r\n        case userConstants.CLEAR_ERROR_DATA: return {...state,\r\n            user: {loading: false, error: '', data: {}}\r\n        }\r\n        \r\n        case userConstants.REGISTER_USER_REQUEST: return {...state, \r\n            register: {loading: true, register_status: false, error: ''}\r\n        }; break;\r\n        case userConstants.REGISTER_USER_FAILURE: return {...state, \r\n            register: {loading: false, register_status: false, error: action.error}\r\n        }; break;\r\n        case userConstants.REGISTER_USER_SUCCESS: return {...state, \r\n            register: {loading: false, register_status: true, error: ''}\r\n        }; break;\r\n        case userConstants.REGISTER_CLEAR_ERROR_DATA: return {...state,\r\n            register: {loading: false, register_status: false, error: ''}\r\n        }\r\n        \r\n        case userConstants.CLEAR_ALL_DATA: return {...state, \r\n            users: {loading: true, data: {}}, \r\n            user: {loading: true, data: {}, error: {}}\r\n        }; break;\r\n\r\n        default: return state;\r\n    }\r\n};","import {combineReducers} from \"redux\";\r\n\r\nimport postReducer from \"./post.reducer\"\r\nimport userReducer from \"./user.reducer\"\r\n\r\nexport default combineReducers({\r\n    postReducer,\r\n    userReducer\r\n});","export const variableConstants = {\r\n    HOST: 'wp-back-end.herokuapp.com',\r\n    PORT: '80',\r\n    LOG_DEV_TEXT: true,\r\n};","import { createStore, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { createLogger } from 'redux-logger';\r\nimport rootReducer from '../reducers';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport {variableConstants} from '../constants/variable.constants';\r\n\r\n\r\nconst loggerMiddleware = createLogger();\r\n\r\n\r\nexport const store = (variableConstants.LOG_DEV_TEXT) ? createStore(\r\n    rootReducer,composeWithDevTools(applyMiddleware(thunkMiddleware, loggerMiddleware))\r\n) :\r\n    createStore(rootReducer, applyMiddleware(thunkMiddleware));","import { createBrowserHistory } from 'history';\r\n\r\nexport const history = createBrowserHistory();","import React from \"react\";\r\nimport { Menu, Icon } from 'antd';\r\n\r\nimport {history} from '../../helpers/history.helpers'\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nclass UserHeader extends React.Component {\r\n\r\n  constructor(props)\r\n  {\r\n    super(props)\r\n  }\r\n\r\n  handleClick(e)\r\n  {\r\n    (e.key == 'login') ? history.push('/login')  : history.push('/register')\r\n  }\r\n\r\n  handleLogout()\r\n  {\r\n    localStorage.removeItem('token')\r\n    localStorage.removeItem('userData')\r\n    window.location.href= \"/home\"\r\n  }\r\n  handleToCreatePost()\r\n  {\r\n    history.push('/create-post')\r\n  }\r\n  showName()\r\n  {\r\n    let data = JSON.parse(localStorage.getItem('userData'))\r\n    return data.name\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {(localStorage.getItem('token')) ? \r\n        <Menu theme=\"dark\" style={{ lineHeight: '64px', textAlign:\"right\" }} mode=\"horizontal\">\r\n        <SubMenu style={{textAlign: \"right\"}} onTitleClick={this.handleToLogin}\r\n          title={\r\n            <span className=\"submenu-title-wrapper\">\r\n              <Icon type=\"user\" />\r\n                Xin chào, {this.showName()}\r\n            </span>\r\n          }\r\n        >\r\n            <Menu.Item onClick={this.handleToCreatePost.bind(this)} key=\"user:1\">Tạo post</Menu.Item>\r\n            <Menu.Item key=\"user:2\">Thông tin cá nhân</Menu.Item>\r\n            <Menu.Item onClick={this.handleLogout.bind(this)} key=\"user:3\">Đăng xuất</Menu.Item>\r\n        </SubMenu> \r\n      </Menu>\r\n: \r\n<Menu theme=\"dark\" onClick={this.handleClick} style={{ lineHeight: '64px', textAlign:\"right\" }} mode=\"horizontal\">\r\n            <Menu.Item key=\"login\" style={{textAlign: \"right\"}}>\r\n            <span className=\"submenu-title-wrapper\">\r\n                <Icon type=\"user\" />\r\n                  Đăng nhập\r\n              </span>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"register\">\r\n            <span className=\"submenu-title-wrapper\">\r\n              <Icon type=\"user-add\" />\r\n                  Đăng ký\r\n              </span>\r\n            </Menu.Item>\r\n          </Menu>\r\n        }\r\n</>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserHeader;","import axios from 'axios'\r\nimport {variableConstants} from '../constants/variable.constants'\r\n\r\n\r\nconst service = axios.create({\r\n    baseURL: `https://${variableConstants.HOST}`, // url = base url + request url\r\n    timeout: 5000, // request timeout\r\n  })\r\n\r\nservice.interceptors.request.use(\r\n    config => {\r\n        if (localStorage.getItem('token')) config.headers['Authorization'] = 'Bearer ' + localStorage.getItem('token')\r\n      return config\r\n    },\r\n    error => {\r\n      return Promise.reject(error)\r\n    },\r\n  )\r\n\r\n  service.interceptors.response.use(\r\n    response => {\r\n        // respond status 200\r\n        if(response.status == 200) return response.data\r\n\r\n        //another respond will remove all token (401, 400, 403)\r\n        localStorage.removeItem('token')\r\n        localStorage.removeItem('userData')\r\n        window.location.href='/home'\r\n    },\r\n    error => {\r\n      return Promise.reject(error.message)\r\n    }\r\n  )\r\n\r\n\r\n  export default service\r\n","import service from '../services';\r\n\r\n\r\nexport const getPostsAPI = {\r\n    getPosts,\r\n    getPost,\r\n    createPost\r\n};\r\n\r\nfunction getPosts(page){\r\n\r\n    return (page) ? service.post('/post/view/' + page) : service.post('/post/view/1')\r\n\r\n}\r\n\r\nfunction getPost(id){\r\n\r\n    return service.post('/post/view/' + id)\r\n\r\n}\r\n\r\nfunction createPost(title, summary, content, tag)\r\n{\r\n    return service.post('/post/create',{title,summary, content,tag})\r\n}","import { postConstants } from '../constants/post.constants';\r\nimport {getPostsAPI} from '../services/api/post';\r\n\r\nexport const getPostsAction = {\r\n    getInfoPosts,\r\n    resetInfo,\r\n    createPost,\r\n};\r\n\r\nfunction getInfoPosts(page)\r\n{\r\n    return dispatch => {\r\n        getPostsAPI.getPosts(page).then(respond => {\r\n            dispatch({type: postConstants.GET_POSTS, data: respond.posts})\r\n        });\r\n    };\r\n}\r\nfunction resetInfo()\r\n{\r\n    return dispatch => { dispatch({type: postConstants.CLEAR_DATA}) }\r\n}\r\n\r\nfunction createPost(title,summary, content, tag)\r\n{\r\n    return dispatch => {\r\n        dispatch({type: postConstants.CREATE_POST_PENDING})\r\n        getPostsAPI.createPost(title,summary, content, tag).then(res => {\r\n                (res.post_created) ? dispatch({type: postConstants.CREATE_POST, status: true})\r\n                 : dispatch({type: postConstants.CREATE_POST, status: false})\r\n        }).catch(error => {\r\n            dispatch({type: postConstants.CREATE_POST, status: false})\r\n        })\r\n    };\r\n}","import service from '../services';\r\n\r\n\r\nexport const getUserAPI = {\r\n    getUsers,\r\n    login,\r\n    register\r\n    \r\n};\r\n\r\nfunction getUsers(){\r\n    return service.post('/users/all')\r\n}\r\n\r\nfunction login(email,password)\r\n{\r\n    let data = {email, password}\r\n\r\n    return service.post('/users/login',data)\r\n}\r\n\r\nfunction register(email,password,name)\r\n{\r\n    let data = {email, password, name}\r\n    return service.post('/users',data)\r\n}\r\n","import { userConstants } from '../constants/user.constants';\r\nimport {getUserAPI} from '../services/api/user';\r\n\r\nexport const userAction = {\r\n    getUsers,\r\n    login,\r\n    clear_error,\r\n    register,\r\n    clear_error_register\r\n};\r\n\r\nfunction getUsers()\r\n{\r\n    return dispatch => {\r\n        getUserAPI.getUsers().then(respond => {\r\n            dispatch({type: userConstants.GET_USERS, data: respond.users})\r\n        });\r\n    };\r\n}\r\n\r\nfunction login(values)\r\n{\r\n    function request() { return { type: userConstants.LOGIN_REQUEST} }\r\n    function success(user) { return { type: userConstants.LOGIN_SUCCESS, user } }\r\n    function failure(error) { return { type: userConstants.LOGIN_FAILURE, error } }\r\n\r\n    return dispatch => {\r\n        dispatch(request());\r\n        getUserAPI.login(values.email, values.password).then(async res => {\r\n            let user = await {\"name\" : res.user.name, \"email\" : res.user.email}\r\n            await dispatch(success(user))\r\n            await localStorage.setItem('token', res.token)\r\n            await localStorage.setItem('userData',JSON.stringify(user))\r\n            window.location.href= \"/home\"\r\n        }).catch((message) => {\r\n            dispatch(failure('Tài khoản và mật khẩu không đúng'))\r\n        })\r\n    }\r\n}\r\n\r\nfunction register(value)\r\n{\r\n    function request() { return { type: userConstants.REGISTER_USER_REQUEST} }\r\n    function success() { return { type: userConstants.REGISTER_USER_SUCCESS} }\r\n    function failure(error) { return { type: userConstants.REGISTER_USER_FAILURE, error } }\r\n    return dispatch => {\r\n        dispatch(request())\r\n        getUserAPI.register(value.email,value.password,value.name).then(async res => {\r\n            if(typeof res.token !== 'undefined' && res.token)\r\n            {\r\n                dispatch(success())\r\n                window.location.href='/login'\r\n            }\r\n            \r\n        }).catch((message) => {\r\n            dispatch(failure('Tạo tài khoản thất bại'))\r\n        })\r\n    }\r\n    \r\n}\r\n\r\nfunction clear_error()\r\n{\r\n    return dispatch => {dispatch({type: userConstants.CLEAR_ERROR_DATA})}\r\n}\r\nfunction clear_error_register()\r\n{\r\n    return dispatch => {dispatch({type: userConstants.REGISTER_CLEAR_ERROR_DATA})}\r\n}\r\n\r\n\r\n","import React from \"react\";\r\n\r\nimport { Row, Col, Card, Divider,Pagination, Collapse, Tag, Input } from 'antd';\r\nimport {connect} from 'react-redux'\r\nimport {withRouter} from 'react-router-dom'\r\nimport {getPostsAction} from '../../actions/post.action'\r\nimport {userAction} from '../../actions/user.action'\r\nimport moment from 'moment'\r\nimport {history} from '../../helpers/history.helpers'\r\n\r\nimport {find} from 'lodash';\r\n\r\n//const { Search } = Input;\r\n\r\n\r\nconst { Panel } = Collapse;\r\n\r\n\r\nclass Main extends React.Component {\r\n\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n    }\r\n\r\n    async loadPosts(page)\r\n    {\r\n        \r\n        let {dispatch} = this.props\r\n        await dispatch(getPostsAction.getInfoPosts(page))\r\n        await dispatch(userAction.getUsers())\r\n    }\r\n    async onChangePage(page)\r\n    {\r\n        let {dispatch} = this.props\r\n        dispatch(getPostsAction.resetInfo())\r\n        dispatch(getPostsAction.getInfoPosts(page))\r\n        history.push('/home/view/' + page)\r\n    }\r\n    load_author_name(value)\r\n    {\r\n        const {userReducer} = this.props.state\r\n        let data = find(userReducer.users.data, {_id: value})\r\n        return data.name + ' - ' + data.email\r\n\r\n    }\r\n    // load_search_post(search_key)\r\n    // {\r\n    //     let {dispatch} = this.props\r\n    //     console.log(search_key)\r\n    // }\r\n    componentDidMount()\r\n    {\r\n        let {page} = this.props.match.params\r\n        this.loadPosts(page)\r\n        document.title = \"Trang chủ | Zigvy blog app | page \" + page\r\n        \r\n    }\r\n    render()\r\n    {\r\n        const {postReducer, userReducer} = this.props.state\r\n        return (\r\n            <div style={{marginTop: '50px'}}>\r\n                {(!postReducer.loading && !userReducer.users.loadding) ?\r\n                \r\n                    (postReducer.posts.posts.length > 0) ? \r\n                    <>\r\n                        {/* <Row type=\"flex\" justify=\"space-around\" align=\"middle\" style={{marginBottom: '50px'}}>\r\n                            <Col span={8} style={{textAlign: 'center'}}>\r\n                                <Search placeholder=\"Tìm kiếm bài đăng\" onSearch={value => this.load_search_post(value)} enterButton />\r\n                            </Col>\r\n                        </Row> */}\r\n                        {\r\n                        postReducer.posts.posts.map((value, index) => {\r\n                            return (\r\n                                <Row key={index} gutter={[0, 32]}>\r\n                                    <Col span={24}>\r\n                                        <Card \r\n                                        title={\r\n                                                value.title + ' - created at: ' + \r\n                                                moment(value.createAt).format('Do MMMM YYYY')\r\n                                                + ' - author: ' +  this.load_author_name(value.owner)//userReducer.users.data[0].name\r\n                                            } \r\n                                            bordered={false} loading={postReducer.loading} type=\"inner\"\r\n                                            >\r\n                                            {value.summary} {/* ReactHtmlParser(value.content) */}\r\n                                            <Divider />\r\n                                            Tag : {value.tag.map((value, index) => {\r\n                                                return (<Tag key={index} color={value}>{value}</Tag>)\r\n                                            })}\r\n                                            <Divider />\r\n                                            <Collapse accordion bordered={false}>\r\n                                                <Panel header=\"Comment\" key=\"1\" >\r\n                                                <p>Comments goes here</p>\r\n                                                </Panel>\r\n                                            </Collapse>\r\n                                        </Card>\r\n                                    </Col>\r\n                                </Row>\r\n                            );\r\n                                }) \r\n                        }\r\n\r\n                            <Row gutter={[0, 32]}>\r\n                                <Col span={24} style={{textAlign: 'center'}}>\r\n                                <Pagination\r\n                                    defaultCurrent={postReducer.posts.current}\r\n                                    total={postReducer.posts.total}\r\n                                    pageSize={2}\r\n                                    onChange={this.onChangePage.bind(this)}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                        </>\r\n                    :\r\n                    <Row gutter={[0, 32]}>\r\n                        <Col span={24}>\r\n                            <Card title=\"No item\" bordered={false}>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>                \r\n                :\r\n                <Row gutter={[0, 32]}>\r\n                    <Col span={24}>\r\n                        <Card title=\"...\" bordered={false} loading={true}>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>            \r\n            }  \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStatetoProps(state)\r\n{\r\n    return {state}\r\n}\r\n\r\nexport default withRouter(connect(mapStatetoProps)(Main));","import React from \"react\"\r\nimport { Switch, Route, Redirect, withRouter } from \"react-router-dom\"\r\nimport PostsView from '../components/posts_view/posts_view'\r\n\r\n\r\nclass Home extends React.Component {\r\n\r\n    render()\r\n    {\r\n        return (\r\n                <Switch>\r\n                    <Route exact\r\n                        path='/home/view/:page'\r\n                        component={PostsView}/>\r\n                    <Redirect from='/home' to='/home/view/1' />\r\n                </Switch>\r\n        );\r\n    }\r\n}\r\nexport default withRouter(Home);","import React from \"react\";\r\nimport { Form, Icon, Input, Button, Row, Col, notification } from 'antd'\r\n\r\n\r\nimport {connect} from 'react-redux'\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nimport {userAction} from '../actions/user.action'\r\n\r\nfunction hasErrors(fieldsError) {\r\n  return Object.keys(fieldsError).some(field => fieldsError[field]);\r\n}\r\n\r\n\r\n\r\nclass FormLogin extends React.Component {\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n        this.state = {\r\n            login_button_disabled: false\r\n        }\r\n    }\r\n  componentDidMount() {\r\n    document.title = \"Đăng nhập | Zigvy blog app\";\r\n    \r\n    // To disabled submit button at the beginning.\r\n    this.props.form.validateFields();\r\n    \r\n  }\r\n  async openNotification(description)  {\r\n    \r\n    let {dispatch} = await this.props\r\n    await notification.open({\r\n      message: 'Đăng nhập',\r\n      description,\r\n      duration: 5\r\n    });\r\n    await dispatch(userAction.clear_error())\r\n  }\r\n  handleLogin(values)\r\n  {\r\n    let {dispatch} = this.props\r\n    dispatch(userAction.login(values))\r\n  }\r\n\r\n  handleSubmit = e => {\r\n      this.setState({\r\n        login_button_disabled: true\r\n      })\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        this.props.form.resetFields()\r\n        this.handleLogin(values)\r\n      }\r\n      this.setState({\r\n        login_button_disabled: false\r\n      })\r\n    });\r\n  };\r\n\r\n  componentDidUpdate()\r\n  {\r\n    if(!this.props.state.userReducer.user.loading)\r\n    {\r\n        const {user} = this.props.state.userReducer\r\n        if(typeof user.error !== 'undefined' && user.error && user.error !== '') {\r\n            this.openNotification(user.error)\r\n        } \r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { getFieldDecorator, getFieldsError, getFieldError, isFieldTouched } = this.props.form;\r\n\r\n    // Only show error after a field is touched.\r\n    const emailError = isFieldTouched('email') && getFieldError('email');\r\n    const passwordError = isFieldTouched('password') && getFieldError('password');\r\n    return (\r\n        <Row type=\"flex\" justify=\"space-around\" align=\"middle\" style={{marginTop: '5%'}}>\r\n            <Col span={8} style={{textAlign: 'center'}}>\r\n                <h2 style={{marginBottom: '5%'}}>Đăng nhập</h2>\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <Form.Item validateStatus={emailError ? 'error' : ''} help={emailError || ''}>\r\n                    {getFieldDecorator('email', {\r\n                        rules: [{ required: true, message: 'Vui lòng nhập email' }],\r\n                    })(\r\n                        <Input\r\n                        type=\"email\"\r\n                        prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                        placeholder=\"Email\"\r\n                        />,\r\n                    )}\r\n                    </Form.Item>\r\n                    <Form.Item validateStatus={passwordError ? 'error' : ''} help={passwordError || ''}>\r\n                    {getFieldDecorator('password', {\r\n                        rules: [{ required: true, message: 'Vui lòng nhập mật khẩu!' },\r\n                                {min: 7, message: 'Mật khẩu phải hơn 7 ký tự'}],\r\n                    })(\r\n                        <Input\r\n                        prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        />,\r\n                    )}\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                    <Button type=\"primary\" disabled={this.props.state.userReducer.user.loading || this.state.login_button_disabled} htmlType=\"submit\" disabled={hasErrors(getFieldsError())}>\r\n                        Đăng nhập\r\n                    </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Col>\r\n        </Row>\r\n    );\r\n  }\r\n}\r\n\r\nconst LoginForm = Form.create({ name: 'horizontal_login' })(FormLogin);\r\n\r\nfunction mapStatetoProps(state)\r\n{\r\n    return {state}\r\n}\r\n\r\nexport default withRouter(connect(mapStatetoProps)(LoginForm));\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport { Form, Icon, Input, Button, Row, Col, notification } from 'antd';\r\n\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\nimport {userAction} from '../actions/user.action'\r\n\r\nfunction hasErrors(fieldsError) {\r\n  return Object.keys(fieldsError).some(field => fieldsError[field]);\r\n}\r\n\r\nclass FormRegister extends React.Component {\r\n  constructor(props)\r\n  {\r\n    super(props)\r\n    this.state = {\r\n      confirmDirty: false\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    document.title = \"Đăng ký tài khoản | Zigvy blog app\";\r\n    // To disabled submit button at the beginning.\r\n    this.props.form.validateFields();\r\n  }\r\n\r\n  handleRegister(values)\r\n  {\r\n    let {dispatch} = this.props\r\n    this.props.form.resetFields()\r\n    dispatch(userAction.register(values))\r\n  }\r\n  async openNotification(description)  {\r\n    \r\n    let {dispatch} = await this.props\r\n    await notification.open({\r\n      message: 'Đăng ký',\r\n      description,\r\n      duration: 5\r\n    });\r\n    await dispatch(userAction.clear_error_register())\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        this.handleRegister(values)\r\n      }\r\n    });\r\n  };\r\n  handleConfirmBlur = e => {\r\n    const { value } = e.target;\r\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\r\n  };\r\n\r\n  compareToFirstPassword = (rule, value, callback) => {\r\n    const { form } = this.props;\r\n    if (value && value !== form.getFieldValue('password')) {\r\n      callback('Mật khẩu bạn nhập không khớp, vui lòng kiểm tra');\r\n    } else {\r\n      callback();\r\n    }\r\n  };\r\n\r\n  validateToNextPassword = (rule, value, callback) => {\r\n    const { form } = this.props;\r\n    if (value && this.state.confirmDirty) {\r\n      form.validateFields(['confirm'], { force: true });\r\n    }\r\n    callback();\r\n  };\r\n\r\n  componentDidUpdate()\r\n  {\r\n    if(!this.props.state.userReducer.register.loading)\r\n    {\r\n        const {register} = this.props.state.userReducer\r\n        if(typeof register.error !== 'undefined' && register.error && register.error !== '') {\r\n            this.openNotification(register.error)\r\n        }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { getFieldDecorator, getFieldsError, getFieldError, isFieldTouched } = this.props.form;\r\n\r\n    // Only show error after a field is touched.\r\n    const emailError = isFieldTouched('email') && getFieldError('email');\r\n    const passwordError = isFieldTouched('password') && getFieldError('password');\r\n    const conf_passwordError = isFieldTouched('conf_password') && getFieldError('conf_password');\r\n    const nameError = isFieldTouched('name') && getFieldError('name');\r\n    return (\r\n        <Row type=\"flex\" justify=\"space-around\" align=\"middle\" style={{marginTop: '5%'}}>\r\n            <Col span={8} style={{textAlign: 'center'}}>\r\n                <h2 style={{marginBottom: '5%'}}>Đăng ký tài khoản</h2>\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <Form.Item validateStatus={emailError ? 'error' : ''} help={emailError || ''}>\r\n                    {getFieldDecorator('email', {\r\n                        rules: [{ required: true, message: 'Vui lòng nhập email' }],\r\n                    })(\r\n                        <Input\r\n                        type=\"email\"\r\n                        prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                        placeholder=\"Email\"\r\n                        />,\r\n                    )}\r\n                    </Form.Item>\r\n                    <Form.Item validateStatus={passwordError ? 'error' : ''} help={passwordError || ''}>\r\n                    {getFieldDecorator('password', {\r\n                        rules: [\r\n                        {required: true, message: 'Vui lòng nhập mật khẩu!'},\r\n                        {min: 7, message: 'Mật khẩu phải hơn 7 ký tự'},\r\n                        {validator: this.validateToNextPassword},\r\n                      ],\r\n                    })(\r\n                        <Input.Password\r\n                        prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        />,\r\n                    )}\r\n                    </Form.Item>\r\n                    <Form.Item validateStatus={conf_passwordError ? 'error' : ''} help={conf_passwordError || ''}>\r\n                    {getFieldDecorator('conf_password', {\r\n                        rules: [\r\n                          { required: true, message: 'Vui lòng xác nhận lại mật khẩu!' },\r\n                          {\r\n                            validator: this.compareToFirstPassword,\r\n                          },\r\n                      \r\n                      ],\r\n                    })(\r\n                        <Input.Password\r\n                        prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                        type=\"password\"\r\n                        placeholder=\"Confirm Password\"\r\n                        onBlur={this.handleConfirmBlur}\r\n                        />,\r\n                    )}\r\n                    </Form.Item>\r\n                    <Form.Item validateStatus={nameError ? 'error' : ''} help={nameError || ''}>\r\n                    {getFieldDecorator('name', {\r\n                        rules: [{ required: true, message: 'Vui lòng nhập tên!' }],\r\n                    })(\r\n                        <Input\r\n                        prefix={<Icon type=\"idcard\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                        type=\"text\"\r\n                        placeholder=\"Name\"\r\n                        />,\r\n                    )}\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\" disabled={hasErrors(getFieldsError())}>\r\n                        Đăng ký\r\n                    </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Col>\r\n        </Row>\r\n    );\r\n  }\r\n}\r\n\r\nconst RegisterForm = Form.create({ name: 'horizontal_register' })(FormRegister);\r\n\r\nfunction mapStatetoProps(state)\r\n{\r\n    return {state}\r\n}\r\n\r\nexport default withRouter(connect(mapStatetoProps)(RegisterForm));\r\n\r\n\r\n\r\n\r\n","\r\nimport HomePage from \"./views/HomePage.views\"\r\nimport LoginForm from \"./views/LoginPage.views\"\r\nimport {RegisterForm} from \"./views/RegisterPage.views\"\r\n\r\nlet mainRouter = [\r\n    {\r\n        path: \"home\",\r\n        name: \"Trang chủ\",\r\n        layout: \"/\",\r\n        component: HomePage,\r\n        invisible: false\r\n    },\r\n\r\n]\r\n\r\n\r\nexport default mainRouter;","import React from \"react\";\r\nimport { Form, Icon, Input, Button, Row, Col, Tag, Tooltip, Card, notification } from 'antd';\r\n\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\n\r\nimport ReactQuill from 'react-quill'; \r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\nimport {getPostsAction} from '../../actions/post.action'\r\n\r\nconst { TextArea } = Input;\r\n\r\n\r\n\r\nfunction hasErrors(fieldsError) {\r\n  return Object.keys(fieldsError).some(field => fieldsError[field]);\r\n}\r\n\r\nclass PostCreateForm extends React.Component {\r\n  constructor(props)\r\n  {\r\n    super(props)\r\n    this.state = {\r\n        tags: [],\r\n        inputVisible: false,\r\n        inputValue: '',\r\n        content: '',\r\n        submit_disabled: true,\r\n    }\r\n  }\r\n  modules = {\r\n    toolbar: [\r\n      [{ 'header': [1, 2, 3, false] }],\r\n      ['bold', 'italic', 'underline','strike', 'blockquote'],\r\n      [{'list': 'ordered'}, {'list': 'bullet'}, {'indent': '-1'}, {'indent': '+1'}],\r\n      ['link', 'image'],\r\n      ['clean']\r\n    ],\r\n  }\r\n\r\n  formats = [\r\n    'header',\r\n    'bold', 'italic', 'underline', 'strike', 'blockquote',\r\n    'list', 'bullet', 'indent',\r\n    'link', 'image'\r\n  ]\r\n  componentDidMount() {\r\n    document.title = \"Tạo bài post | Zigvy blog app\";\r\n    // To disabled submit button at the beginning.\r\n    this.props.form.validateFields();\r\n  }\r\n  async openNotification(description)  {\r\n    let {dispatch} = await this.props\r\n    await notification.open({\r\n      message: 'Tạo bài viết',\r\n      description,\r\n      duration: 5\r\n    });\r\n  }\r\n\r\n  async handleCreatePost(values)\r\n  {\r\n    let {dispatch} = this.props\r\n    await this.props.form.resetFields()\r\n    const {content, tags} = await this.state\r\n    await this.setState({\r\n        submit_disabled: true\r\n    })\r\n    await dispatch(getPostsAction.createPost(values.title, values.summary, content, tags))\r\n    await this.setState({\r\n      tags: [],\r\n        inputVisible: false,\r\n        inputValue: '',\r\n        content: '',\r\n    })\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        this.handleCreatePost(values)\r\n      }\r\n    });\r\n  }\r\n\r\n  handleChangeQuill(content)\r\n  {\r\n        this.setState({content})\r\n        this.check()\r\n        \r\n  }\r\n\r\n  check()\r\n  {\r\n    (this.state.content.indexOf('<p><br></p>') !== -1 || this.state.content == '' || (Array.isArray(this.state.tags) && this.state.tags.length  < 1)) ? \r\n    this.setState({submit_disabled: true}) :\r\n    this.setState({submit_disabled: false})\r\n  }\r\n\r\n     handleClose = async removedTag => {\r\n        const tags = this.state.tags.filter(tag => tag !== removedTag);\r\n        await this.setState({ tags });\r\n        await this.check()\r\n    };\r\n\r\n    showInput = () => {\r\n        this.setState({ inputVisible: true }, () => this.input.focus());\r\n    };\r\n\r\n    handleInputChange = e => {\r\n        this.setState({ inputValue: e.target.value });\r\n    };\r\n   handleInputConfirm = async () => {\r\n    \r\n    const { inputValue } = this.state;\r\n    let { tags } = this.state;\r\n    if (inputValue && tags.indexOf(inputValue) === -1) {\r\n      tags = [...tags, inputValue];\r\n    }\r\n    await this.setState({\r\n      tags,\r\n      inputVisible: false,\r\n      inputValue: '',\r\n    });\r\n    \r\n    await this.check()\r\n  };\r\n\r\n  saveInputRef = input => (this.input = input);\r\n\r\n  componentDidUpdate()\r\n  {\r\n    let {create_post} = this.props.state.postReducer\r\n    if(!create_post.loading)\r\n    {\r\n      if(create_post.status !== null)\r\n      {\r\n          (create_post.status) ? this.openNotification('Tạo bài viết thành công') : this.openNotification('Tạo bài viết thất bại')\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { getFieldDecorator, getFieldsError, getFieldError, isFieldTouched } = this.props.form;\r\n    const { tags, inputVisible, inputValue } = this.state;\r\n\r\n    // Only show error after a field is touched.\r\n    const titleError = isFieldTouched('title') && getFieldError('title');\r\n    const summaryError = isFieldTouched('summary') && getFieldError('summary');\r\n    return (\r\n        <Card>\r\n            <Row type=\"flex\" justify=\"space-around\" align=\"middle\" style={{marginTop: '5%'}}>\r\n                <Col span={8} style={{textAlign: 'center'}}>\r\n                    <h2 style={{marginBottom: '5%'}}>Tạo bài viết</h2>\r\n                    <Form onSubmit={this.handleSubmit}>\r\n                        <Form.Item validateStatus={titleError ? 'error' : ''} help={titleError || ''}>\r\n                        {getFieldDecorator('title', {\r\n                            rules: [{ required: true, message: 'Vui lòng nhập tiêu đề' }],\r\n                        })(\r\n                            <Input\r\n                            prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                            placeholder=\"Tiêu đề\"\r\n                            type=\"text\"\r\n                            />,\r\n                        )}\r\n                        </Form.Item>\r\n                        <Form.Item validateStatus={summaryError ? 'error' : ''} help={summaryError || ''}>\r\n                        {getFieldDecorator('summary', {\r\n                            rules: [{ required: true, message: 'Vui lòng nhập nội dung tóm tắt' }],\r\n                            })(\r\n                                <TextArea  rows={4} placeholder=\"Nội dung tóm tắt\"/>,\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Nội dung: \">\r\n                        <ReactQuill value={this.state.content}\r\n                                    onChange={(value) => this.handleChangeQuill(value)} \r\n                                    modules={this.modules}\r\n                                    formats={this.formats} />   \r\n                        </Form.Item>\r\n                        <Form.Item label=\"Thẻ: \">\r\n                            {tags.map((tag, index) => {\r\n                                const isLongTag = tag.length > 20;\r\n                                const tagElem = (\r\n                                    <Tag key={tag} closable onClose={() => this.handleClose(tag)}>\r\n                                    {isLongTag ? `${tag.slice(0, 20)}...` : tag}\r\n                                    </Tag>\r\n                                );\r\n                                return isLongTag ? (\r\n                                    <Tooltip title={tag} key={tag}>\r\n                                    {tagElem}\r\n                                    </Tooltip>\r\n                                ) : (\r\n                                    tagElem\r\n                                );\r\n                                })}\r\n                                {inputVisible && (\r\n                                <Input\r\n                                    ref={this.saveInputRef}\r\n                                    type=\"text\"\r\n                                    size=\"small\"\r\n                                    style={{ width: 78 }}\r\n                                    value={inputValue}\r\n                                    onChange={this.handleInputChange}\r\n                                    onBlur={this.handleInputConfirm}\r\n                                    onPressEnter={this.handleInputConfirm}\r\n                                />\r\n                                )}\r\n                                {!inputVisible && (\r\n                                <Tag onClick={this.showInput} style={{ background: '#fff', borderStyle: 'dashed' }}>\r\n                                    <Icon type=\"plus\" /> New Tag\r\n                                </Tag>\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                        <Button type=\"primary\" htmlType=\"submit\" disabled={hasErrors(getFieldsError()) || this.state.submit_disabled}>\r\n                            Tạo bài viết\r\n                        </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </Card>\r\n    );\r\n  }\r\n}\r\n\r\nconst FormPostCreate = Form.create({ name: 'horizontal_create_post' })(PostCreateForm);\r\n\r\nfunction mapStatetoProps(state)\r\n{\r\n    return {state}\r\n}\r\n\r\nexport default withRouter(connect(mapStatetoProps)(FormPostCreate));","import React from 'react'\r\nimport FormPostCreate from '../components/posts_view/posts_create'\r\nimport { Switch, Route, Redirect, withRouter } from \"react-router-dom\"\r\n\r\nclass PostCreate extends React.Component\r\n{\r\n    render()\r\n    {\r\n        return(<FormPostCreate />);\r\n    }\r\n}\r\n\r\nexport default withRouter(PostCreate)","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\naxios.interceptors.response.use((res) => {\r\n    return res;\r\n}, (error) => {\r\n    if (error.response.status === 401) {\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('userData');\r\n        window.location.href = \"/home\";\r\n    }\r\n});\r\n\r\nexport const PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route {...rest} render={props => (\r\n        localStorage.getItem('token')\r\n        ? <Redirect to={{ pathname: '/home', state: { from: props.location } }} />\r\n        : <Component {...props} />\r\n    )}\r\n    />)\r\n\r\nexport const PrivateNotTokenRoute = ({ component: Component, ...rest }) => (\r\n    <Route {...rest} render={props => (\r\n    (typeof localStorage.getItem('token') !== 'undefined' && !localStorage.getItem('token'))\r\n        ? <Redirect to={{ pathname: '/home', state: { from: props.location } }} />\r\n        : <Component {...props} />\r\n    )}\r\n    />)\r\n","/* eslint-disable */\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\nimport { Layout } from 'antd';\r\n\r\nimport UserHeader from '../components/Header/UserHeader';\r\nconst { Header, Footer, Content } = Layout;\r\n\r\nimport routes from \"../router\";\r\n\r\nimport '../App.css';\r\n\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\nimport LoginForm from \"../views/LoginPage.views\"\r\nimport RegisterForm from \"../views/RegisterPage.views\"\r\nimport PostCreate from \"../views/PostCreate.view\"\r\n\r\nimport {PrivateRoute, PrivateNotTokenRoute} from \"../components/Route/PrivateRoute\";\r\n\r\n\r\n\r\nconst switchRoutes = (\r\n  <Switch>\r\n    {routes.map((prop, key) => {\r\n      if (prop.layout === \"/\" && !prop.invisible) {\r\n        return (\r\n          <Route\r\n            path={prop.layout + prop.path}\r\n            component={prop.component}\r\n            key={key}\r\n          />\r\n        );\r\n      }\r\n    })}\r\n    {/* ignore access to login,register if already logged in */}\r\n    <PrivateRoute path=\"/login\" component={LoginForm} />\r\n    <PrivateRoute path=\"/register\" component={RegisterForm} />\r\n\r\n    {/* if already logged in will access this page */}\r\n    <PrivateNotTokenRoute path=\"/create-post\" component={PostCreate} />\r\n    \r\n    <Redirect from=\"/\" to=\"/home\" />\r\n  </Switch>\r\n);\r\n\r\n\r\nclass Home extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  handleClick()\r\n  {\r\n    window.location.href = '/home'\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <>\r\n        <Layout>\r\n            <Header>\r\n                <div className=\"logo\" onClick={this.handleClick.bind(this)}></div>\r\n                <UserHeader />\r\n            </Header>\r\n            <Content>{switchRoutes}</Content>\r\n            <Footer style={{textAlign: 'center'}}>@Copyright by Tran Duong Minh Hai</Footer>\r\n    </Layout>\r\n        </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStatetoProps(state)\r\n{\r\n  return {state};\r\n}\r\n\r\nexport default withRouter(connect(mapStatetoProps)(Home));\r\n","import React from 'react';\r\n\r\nimport { Router, Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store/store';\r\n\r\nimport Main from './layouts/Main.layout'\r\n\r\n\r\n\r\n\r\n\r\nimport  { history } from './helpers/history.helpers';\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <Router history={history}>\r\n        <Switch>\r\n          <Route path=\"/\" component={Main} />\r\n        </Switch>\r\n      </Router>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}